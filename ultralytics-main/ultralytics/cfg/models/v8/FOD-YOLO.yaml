# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P2-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 12  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, LDConv, []]  # 3-P3/8
  - [-1, 6, DCNv3_C2f, [256, True]]
  - [-1, 1, LDConv, []]  # 5-P4/16
  - [-1, 6, DCNv3_C2f, [512, True]]
  - [-1, 1, LDConv, []]  # 7-P5/32
  - [-1, 3, DCNv3_C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9
  - [-1, 1, BiLevelRoutingAttention_nchw, []]  # 10


# YOLOv8.0-p2 head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 6], 1, Concat, [1]]  # cat backbone P4
  - [-1, 3, VoVGSCSP, [512]]  # 13

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 4], 1, Concat, [1]]  # cat backbone P3
  - [-1, 3, VoVGSCSP, [256]]  # 16 (P3/8-small)

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 2], 1, Concat, [1]]  # cat backbone P2
  - [-1, 3, VoVGSCSP, [128]]  # 19 (P2/4-xsmall)

  - [-1, 1, GSConv, [128, 3, 2]]
  - [[-1, 16], 1, Concat, [1]]  # cat head P3
  - [-1, 3, VoVGSCSP, [256]]  # 22 (P3/8-small)

  - [-1, 1, GSConv, [256, 3, 2]]
  - [[-1, 13], 1, Concat, [1]]  # cat head P4
  - [-1, 3, VoVGSCSP, [512]]  # 25 (P4/16-medium)

  - [[19, 22, 25], 1, GREHead, [nc]]  # Detect(P2, P3, P4)
